# structure/SConstruct
#
# SCons buildfile for "Structure0815" solver
#
######################################

import os;
import sys;


##### Determine boost root path from environment variable
#
boostRootPath = os.getenv ( 'BOOST_ROOT' )
if ( boostRootPath == None ):
   print 'ERROR: Environment variable BOOST_ROOT not defined!'
   sys.exit(1)
else:
   print 'Using environment variable BOOST_ROOT =', boostRootPath

peanoRoot = os.getenv ('PEANO_ROOT')
if ( peanoRoot == None ):
   print 'ERROR: Environment variable PEANO_ROOT not defined!'
   sys.exit(1)
else:
   print 'Using environment variable PEANO_ROOT =', peanoRoot
   

preciceRoot = os.getenv ('PRECICE_ROOT')
if ( preciceRoot == None ):
   print 'ERROR: Environment variable PRECICE_ROOT not defined!'
   sys.exit(1)
else:
   print 'Using environment variable PRECICE_ROOT =', preciceRoot
   
   
buildmode = 'debug'

cppdefines = [
   'PRECICE_USE_MPI',
   'Debug',
   'Assert',
   'Dim2'
   ]
   
libpath = [
   peanoRoot + '/src/build/' + buildmode + '/dim2/lib/',
   preciceRoot + '/build/' + buildmode + '-dim2-mpi-serial/'
   ]
   
libs = [
   'precice',
   'peano'
   ]

cpppath = [
   boostRootPath + '/boost/tr1/tr1',
   boostRootPath,
   peanoRoot + '/src',
   preciceRoot + '/src'
   ]
   
ccflags = []
   
#cxx = 'mpicxx'      # For systems offering mpicxx compiler
cxx = 'g++-4'
libpath.append ('/cygdrive/c/Programme/MPICH2/lib')
libs.append('mpi')

env = Environment ( 
   CPPDEFINES = cppdefines,      # defines for preprocessor (#define xyz)
   LIBPATH    = libpath,         # path to libraries used
   LIBS       = libs,            # libraries used (without prefix "lib" and suffix ".a"/".so"/...)
   CPPPATH    = cpppath,         # pathes where the preprocessor should look for files
   CCFLAGS    = ccflags,         # flags for the c/c++ compilers
   CXX = cxx                 # the c++ compiler that should be used
   )
   
env.Program ( 'structure0815', Glob('*.cpp') )