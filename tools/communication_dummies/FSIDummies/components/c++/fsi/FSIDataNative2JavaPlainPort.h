#ifndef FSI_FSIDATA2NATIVE2JAVAPLAINPORT_H_
#define FSI_FSIDATA2NATIVE2JAVAPLAINPORT_H_ 

#include "fsi/FSIData.h"

#include <iostream>
//
// ASCoDT - Advanced Scientific Computing Development Toolkit
//
// This file was generated by ASCoDT's simplified SIDL compiler.
//
// Authors: Tobias Weinzierl, Atanas Atanasov   
//

#ifdef JAVA
#include <jni.h> 
#ifdef __cplusplus
  extern "C" {
#endif


          
JNIEXPORT void JNICALL Java_fsi_FSIDataNative2JavaPlainPort_createInstance(JNIEnv *env, jobject obj);
JNIEXPORT void JNICALL Java_fsi_FSIDataNative2JavaPlainPort_destroyInstance(JNIEnv *env, jobject obj,jlong ref);

#ifdef __cplusplus
  }
#endif




namespace fsi { 

     class FSIDataNative2JavaPlainPort;
}

class fsi::FSIDataNative2JavaPlainPort: public fsi::FSIData{
  private:
    JavaVM* _jvm;
    jobject _obj;
  public:
    FSIDataNative2JavaPlainPort(JavaVM* jvm,jobject obj);
    ~FSIDataNative2JavaPlainPort();
    void transferData(const int* coordId, const int coordId_len,const double* data, const int data_len);  
    void transferDataParallel(const int* coordId, const int coordId_len,const double* data, const int data_len);
   
    void dataAck(int& ack);  
    void dataAckParallel(int& ack);
   
};
#endif
#endif
