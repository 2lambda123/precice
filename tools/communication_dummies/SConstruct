# structure/SConstruct
#
# SCons buildfile for "Structure0815" solver
#
######################################

import os;
import sys;
  
##### Declare build variables and default values
#
cppdefines = []   
libpath = [ 
   #'/home/gatzhamm/00_Sources/precice/build/release/' # Path to preCICE library
   ]      
libs = [
   #'stdc++',
   #'m',
   #'dl'
   #'precice',  # preCICE library
   #'pthread' 
   ]
cpppath = [
    #'/home/gatzhamm/00_Sources/precice/src/',
    #'/home/gatzhamm/00_Sources/peano-src/',
    #'/home/software/boost/'       
    ]   
ccflags = []   
#cxx = '/home/atanasoa/intel/impi/4.1.3.049/intel64/bin/mpiicpc'
#cxx = '/home/uekerman/Software/openmpi-1.8.1/ompi/tools/wrappers/mpicc.1'
cxx = 'mpicxx'

# For systems offering mpicxx compiler


#ccflags.append('-g3')
ccflags.append('-O3')
#ccflags.append('-mt_mpi')
cppdefines.append('Parallel')
cpppath.append('FSIDummies/components/c++/')
cpppath.append('FSIDummies/src/')
#libpath.append (preciceRoot + '/build/' + buildmode + '-dim2-nompi/')

####### CCA component sources #########


sourcesCCADummyA = [
    Glob('FSIDummies/components/c++/fsi/FSIDummyAAbstractImplementation.cpp'),
    Glob('FSIDummies/components/c++/fsi/FSIDummyAC2CxxProxy.cpp'),
    Glob('FSIDummies/components/c++/tinyxml_ascodt.cpp'),
    Glob('FSIDummies/components/c++/fsi/FSICommNative2JavaPlainPort.cpp'),
    Glob('FSIDummies/components/c++/fsi/FSICommNative2NativePlainPort.cpp'),
    Glob('FSIDummies/components/c++/fsi/FSICommCxx2SocketPlainPort.cpp'),
    Glob('FSIDummies/components/c++/fsi/FSICommC2CxxSocketPlainPort.cpp'), 
    Glob('FSIDummies/components/c++/fsi/FSICommNativeDispatcher.cpp'),
    Glob('FSIDummies/components/c++/fsi/FSICommNativeSocketDispatcher.cpp'),
    Glob('FSIDummies/components/c++/fsi/FSICommCProxyNativeSocketDispatcher.cpp'),
    Glob('FSIDummies/src/fsi/FSIDummyAImplementation.cpp')
]


sourcesCCADummyB = [
    Glob('FSIDummies/components/c++/fsi/FSIDummyBAbstractImplementation.cpp'),
    Glob('FSIDummies/components/c++/fsi/FSIDummyBC2CxxProxy.cpp'),
    Glob('FSIDummies/components/c++/fsi/FSIDataCxx2SocketPlainPort.cpp'),
    Glob('FSIDummies/components/c++/tinyxml_ascodt.cpp'),
    Glob('FSIDummies/src/fsi/FSIDummyBImplementation.cpp'),
    Glob('FSIDummies/src/fsi/FSIDummyCommunicator.cpp')
]

##### Setup build environment and issue builds
#
env = Environment ( 
   CPPDEFINES = cppdefines,  # defines for preprocessor (#define xyz)
   LIBPATH    = libpath,     # path to libraries used
   LIBS       = libs,        # libraries used (without prefix "lib" and suffix ".a"/".so"/...)
   CPPPATH    = cpppath,     # pathes where the preprocessor should look for files
   CCFLAGS    = ccflags,     # flags for the c/c++ compilers
   CXX        = cxx,         # the c++ compiler that should be used
   ENV        = os.environ  # propagates environment variables to scons  
   )
   
env.Program (
    target = 'dummyA',
    source = [
	sourcesCCADummyA,
	Glob('mainA.cpp')
	
    ]
    )

env.Program (
    target = 'dummyB',
    source = [
	Glob('mainB.cpp'),
	sourcesCCADummyB
    ]
    )   
#env.Program ( 'dummyA', Glob('mainA.cpp') )
#env.Program ( 'dummyB', Glob('mainB.cpp') )
