Guide to setup the Git repository for contributing to preCICE:

1. Go to a directory where you want to have the preCICE repository files in a subfolder, e.g., your eclipse workspace
2. Clone the official repository by tpying "git clone ssh://USERNAME@atsccs29.informatik.tu-muenchen.de/home_local/repositories/git/precice.git SUBFOLDER_NAME", where USERNAME is your username at the SCCS chair and SUBFOLDER_NAME is the name of the subfolder the repository files are checked out to.
3. Rename the repository (locally) to "sccs" by typing "git remote rename origin sccs". You can check which respitories are linked to yours by typing "git remote".
4. Link to the contributors repository by typing "git remote add sccs-contrib ssh://gatzhamm@atsccs29.informatik.tu-muenchen.de/home_local/repositories/git/precice_contrib.git"
5. We assume in the following that your development branch in precice_contrib.git has already been created. Fetch branch information from precice_contrib.git by typing "git fetch sccs-contrib".
6. Checkout your development branch by typing "git checkout --track sccs-contrib/YOUR_BRANCH". You have now switched to the development branch and can start developing. To check which branch you are in, type "git branch". The one which is marked by an asterix is the active one. The "--track" ensures, that when you are in your branch, your fetch/push/pull commands will automatically be with respect to the precice_contrib/YOUR_BRANCH branch. If you are in the master branch, those commands will be with respect to the precice/master branch in the official repository, thus only fetch/pull (should) work.

How to develop with Git for preCICE:
Frist, read about the Git basics and branching here: http://git-scm.com/book. From time to time, fetch and merge changes from the precice.git repository into your development branch. I will anounce bigger changes, such that you know when something bigger changed. The longer you wait, the more changes might accumulate. Latest when requiring your changes to be integrated into the precice/master branch you should merge the contents from there. This makes it easy for me to integrate your changes, since I can do a so called fast-forward merge without any conflicts.
