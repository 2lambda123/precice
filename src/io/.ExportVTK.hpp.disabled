#ifndef PRECICE_IO_EXPORTVTK_HPP_
#define PRECICE_IO_EXPORTVTK_HPP_

#include "AbstractExport.hpp"
#include "tarch/logging/Log.h"
#include <string>

namespace precice {
   namespace mesh {
      class Mesh;
   }
}

// ----------------------------------------------------------- CLASS DEFINITION

namespace precice {
namespace io {

/**
 * @brief Writes triangulated meshes to vtk files.
 */
class ExportVTK : public AbstractExport
{
public:

  /**
   * @brief Standard constructor
   *
   * @param filename  [IN] Name of the vtk file (including file extension)
   * @param container [IN] Container holding geometry to be visualized
   */
  ExportVTK (
    const std::string & path,
    bool                plotNormals );

  /**
   * @brief Returns the VTK type ID.
   */
  virtual int getType () const;

  /**
   * @brief Perform writing to vtk file
   */
  virtual void doExport (
    const std::string & name,
    mesh::Mesh &        mesh );

private:

   // @brief Logging device.
   static tarch::logging::Log _log;

   // @brief By default set true: plot vertex normals, false: no normals plotting
   bool _plotNormals;
};

}} // namespace precice, io

#endif /* PRECICE_IO_EXPORTVTK_HPP_ */
